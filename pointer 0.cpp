// pointer 0.cpp : Defines the entry point for the console application.
//

/*Раз и навсегда выясняется, как же правильнее (и удобнее, и непротиворечивее)
  записывать указатели и ссылки (но они пишутся так-же).*/

#include "stdafx.h"
#include "iostream.h"
#include "assert.h"

void func1(int *smth) {cout << *smth << endl;}
void func2(int* smth) {cout << *smth << endl;}

bool func3(int smth) {return true;}
bool func4(void) {return true;}

void main(int argc, char* argv[])
{
	int a=47;						//неглобальные нужно инитить


//1------------------------------------------------------------
	int *ptr1=&a;					//первый вариант синтаксиса
	cout << *ptr1 << endl;

	int* ptr2=&a;					//второй вариант синтаксиса
	cout << *ptr2 << endl;


//2------------------------------------------------------------
	func1(&a);						//первый вариант синтаксиса
	func2(&a);						//второй вариант синтаксиса


//3------------------------------------------------------------
									//указатели на функции
	bool (*fptr1)(int)=func3;
	assert(fptr1(a));
	bool (*fptr2)(void)=func4;
	assert(fptr2);


//4------------------------------------------------------------
									//указатели на массивы
	int b[100];
	b[1]=95;
	//bool (*aptr1)[100]=b;			//неверно 
	int *aptr2=b;
	cout << aptr2[1] << endl;

}

/*В результате выяснилось, что приписывать звёздочку можно и к типу, и к переменной,
  а можно вообще не ставить пробела ни там, ни там.
  Сама среда в окнах проэкта и аутпута относит звезду к имени переменной, причём вне
  зависимости от того, как пишет программист. 
  Выходит, что общий единый подход именно таков. Он подтверждается в блоках 3 и 4.
  Но тогда следует хорошо различать случаи ОБЪЯВЛЕНИЯ и РАЗЫМЕНОВАНИЯ.*/
